MEMORY {
	# Zero-page config. We're free to use the entire zero-page.
	ZP:			start = $0000,		size = $0100,	type = rw;

	# Where the BASIC code is built to execute from. This is the only image
	# needed to be loaded. Allocate 12KB for the image, even though we don't
	# need that much, because it's a multiple of the flash page size.
	BASIC:		start = BAS_START,	size = $3000,	fill = no,	file = %O;

	DUMMY:		start = $0000,		size = $00FF,	file = "";

	# The RST vector points to COLD_START. Useful for the WDC debugger, so
	# it automatically knows where the application entry point is.
	RSTVEC:		start = $FFFC,		size = $0002,	file = "%O-RSTVec.bin";
}

SEGMENTS {
	ZEROPAGE:	load = ZP,		type = zp;
	HEADER:		load = BASIC,	type = ro;
	VECTORS:	load = BASIC,	type = ro;
	KEYWORDS:	load = BASIC,	type = ro;
	ERROR:		load = BASIC,	type = ro;
	CODE:		load = BASIC,	type = ro;
	CHRGET:		load = BASIC,	type = ro;
	INIT:		load = BASIC,	type = ro;
	EXTRA:		load = BASIC,	type = ro,	define = true;
	DUMMY:		load = DUMMY; # don't include

	# Special segment for the RST vector for the WDC debugger.
	RSTVEC:		load = RSTVEC,	type = ro;
}

